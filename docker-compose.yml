services:
  device_management:
    build: ./device_management
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8081:8081
    container_name: device_management
    env_file:
      - ./device_management.env

  telemetry:
    build: ./telemetry
    depends_on:
      clickhouse:
        condition: service_healthy
    ports:
      - 8082:8082
    container_name: telemetry
    env_file:
      - ./telemetry.env

  postgres:
    container_name: postgres
    image: postgres:13-alpine
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql
    environment:
      - POSTGRES_DB=smart_home
      - POSTGRES_USER=your_username
      - POSTGRES_PASSWORD=your_password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "smart_home" ]
      interval: 30s
      timeout: 60s
      retries: 5

  clickhouse:
    container_name: clickhouse
    image: clickhouse/clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse/database:/var/lib/clickhouse
    environment:
      - CLICKHOUSE_USER=username
      - CLICKHOUSE_PASSWORD=password
      - CLICKHOUSE_DB=smart_home
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "localhost:8123/ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic device_register --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic telemetry --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8083:8080
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: true